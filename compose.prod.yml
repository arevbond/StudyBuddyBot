services:
  tg-bot:
    container_name: "tg-bot-production"
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      migrate:
        condition: service_completed_successfully
    volumes:
      - ./bot.log:/bot.log
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - ./bot.log:/var/log/bot.log
      - ./config/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.2
    volumes:
      - loki-data:/loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    restart: unless-stopped

  db:
    restart: always

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    ports:
      - 9100:9100
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus

volumes:
  loki-data:
  grafana-data:
  prometheus-data: